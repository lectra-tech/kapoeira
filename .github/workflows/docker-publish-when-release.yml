name: Docker Build & Publish on Registry when SemVer Release

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]

env:
  ORIGIN_REPOSITORY: lectra-tech/kapoeira
  # Dockerhub
  REGISTRY: docker.io
  REGISTRY_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/kapoeira
  # Tests
  TEST_FULL_IMAGE_NAME: local/kapoeira:test

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Detect a forked repository
        if: ${{ github.repository != env.ORIGIN_REPOSITORY }}
        run: |
          echo "REGISTRY=ghcr.io" >> "$GITHUB_ENV"
          echo "REGISTRY_USERNAME=${{ github.actor }}" >> "$GITHUB_ENV"
          echo "REGISTRY_PASSWORD=${{ secrets.GITHUB_TOKEN }}" >> "$GITHUB_ENV"
          echo "IMAGE_NAME=${{ github.repository }}" >> "$GITHUB_ENV"

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install Cosign
        if: ${{ github.repository == env.ORIGIN_REPOSITORY }}
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
        with:
          cosign-release: 'v2.1.1'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}

      # Build locally Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Docker build with unit tests
        id: build-and-test
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          load: true
          tags: ${{ env.TEST_FULL_IMAGE_NAME }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Launch Kafka environment
        run: |
          docker compose up -d

      - name: Run integration tests
        run: |
          docker compose run --rm --name kapoeira-it kapoeira

      - name: Stop Kafka environment
        run: |
          docker compose down

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      # Build and push Docker image with Buildx on release
      # https://github.com/docker/build-push-action
      - name: Docker build for many platforms and push into ${{ env.REGISTRY }}
        if: ${{ contains(github.ref, 'refs/tags/') }}
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ contains(github.ref, 'refs/tags/') && github.repository == env.ORIGIN_REPOSITORY}}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
